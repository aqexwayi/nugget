- Get gc-looping to work to verify loop constructs work on this runtime
  Seems the program crashes after several hundred thousand GC's... not sure why
- This is a bug, r_733 should not have been added to this closure:

    static void __lambda_2(object r_733) {
        mclosure1(c_7310, __lambda_1,r_733);

- TBD: Can there be a lambda reference that is not a closure or a direct call?
- interesting (but probably not a big deal):
 (begin (let ((x #f)) (set! x (+ 2 (* 3 4))) (display x)))
 after desugar:
 ((lambda (x) (set! x (+ 2 (* 3 4)))) #f)

 was the begin optimized away?

- Just a thought: if this ever became self-hosting, could distribute compiled C files
